UNAME=$(uname)

makeMeLaugh() {
  if checkPath fortune; then
    local FORTUNE
    if [ -d /opt/local/share/games/fortune/comedy ] || [ -d /usr/share/games/fortune/comedy ]; then
        FORTUNE=$(fortune -e comedy)
    else
        FORTUNE=$(fortune -a)
    fi
    echo -e "\n$FORTUNE\n"
  fi
}

# helper function to search the $PATH for a given
# executable.  useful for checks across different
# systems.
checkPath() {
    local execpath
    local OIFS
    # the bash compatible version of this
    OIFS=$IFS
    IFS=':'
    for dir in $PATH
    do 
        execpath="$dir/$1" 
        if [ -x $execpath ]; then
            IFS=$OIFS
            return 0
        fi
    done

    # set the file separator back to normal
    IFS=$OIFS
    
    # the zsh compatible version
    for dir in $path
    do 
        execpath="$dir/$1"
        if [ -x $execpath ]; then
            return 0
        fi
    done
    
    return 1
}

isiPhone() {
    if checkPath sw_vers; then
        [ $(sw_vers | awk '/ProductName/ {print $2}') = "iPhone" ] && return 0
    fi
    return 1
}

# a little function to print the full path to a file.
fullpath() {
    local fullpath
    fullpath=$(pwd)/$1
    echo $fullpath
    
    # on OS X copy it to the clipboard too :)
    if checkPath pbcopy && [ $UNAME = "Darwin" ]; then
        echo $fullpath | pbcopy
    fi
}

weShouldUpdate() {
    local time_to_update
    local touchy_file
    local last_mod
    local current_time
    local time_diff
    # only update once a day
    time_to_update=86400
    # use a dot file as a marker
    touchy_file=$HOME/.dotfiles_updated
    # if the file doesn't exist we'll end up touching it
    last_mod=0
    if [ -e $touchy_file ]; then
        # stat is different between flavas
        if [ $UNAME = "Linux" ] || isiPhone; then
            last_mod=$(stat -c %Y "$touchy_file")
        elif [ $UNAME = "FreeBSD" ] || [ $UNAME = "Darwin" ]; then
            last_mod=$(stat -f %a "$touchy_file")
        fi
    fi
    current_time=$(date +%s)
    # see what the difference is in seconds
    time_diff=$(( $current_time - $last_mod ))
    if [ $time_diff -gt $time_to_update ]; then
        touch $touchy_file
        echo "It's been a while since we updated the dotfiles..."
        return 0
    fi
    return 1
}
